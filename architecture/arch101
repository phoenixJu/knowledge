summary
1. 架构设计主要目的是为了解决软件复杂度带来的问题。
2. 架构复杂度的主要来源：高性能、高可用（最难）可扩展性、低成本安全和规模
3. 架构设计和编写程序不同，编写程序虽然有很多种方式，但是程序的功能基本是确定的，但是架构设计具有不确定性，架构设计具备三原则：简单原则、合适原则和演化原则。系统的组成组件越多，复杂度越高比如可用度为90%，则3个模块可用性则为0.9 * 0.9 * 0.9（简单优于复杂、演化优于一步到位）
4. 架构设计的第一步是：识别复杂度；第二步：设计备选方案：需要设计区分度大的备选方案3-5个；第三步：评估和选择备选方案（加权法和数量对比法，优先考虑必须满足的需求）；第四步：详细设计方案（详细设计方案需要确定方案的关键技术细节，比如elesticsearch需要确定索引方式、副本数和节点个数；mysql分库分表需要确定哪些需要分表，按照什么维度分，联合查询如何处理等；nginx的主备如何做，负载均衡算法选择哪一种等）
5. 架构师要求（备选方案关键技术细节需要了解；分步骤分阶段分系统降低复杂度）
6. 分场景覆盖case来检验自己方案实现的细节
7. ppt架构师特点：方案大多从网上抄；细节不讨论；口头禅:别人都是这么用的；只会众多技术名词的单词拼写